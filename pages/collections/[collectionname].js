import Head from "next/head";
import { useEffect } from "react";
import { useTranslation } from "react-i18next";
import { useDispatch, useSelector } from "react-redux";
import callApi from "../../src/api/callApi";
import { BASE_URL, GET_WITH_COLLECTION } from "../../src/api/urls";
import CollectionDetails from "../../src/Components/collectionDetails/CollectionDetails";
import Footer from "../../src/Components/footer/Footer";
import Header from "../../src/Components/header/Header";
import NotPage from "../../src/Components/noPage/NotPage";
import { getcollectionproduct } from "../../src/redux/collectionDetail/collectionAction";
import Loader from "../../src/tools/loader/Loader";
import Placement from "../../src/tools/placement/Placement";
import ReportGmailerrorredIcon from "@mui/icons-material/ReportGmailerrorred";

export default function CollectionName({ collection }) {
  const state = useSelector((state) => state.stateColProduct);
  const lang = useSelector((state) => state.stateLang.lng);
  const { t } = useTranslation();
  const dispatch = useDispatch();
  useEffect(() => {
    var sliced = [];
    for (var i = 0; i < collection[0].data.length; i += 5) {
      sliced.push(collection[0].data.slice(i, i + 5));
      dispatch(getcollectionproduct(sliced));
    }
  }, [collection[0]]);
  return (
    <div>
      <Head>
        <title>
          {collection[0].data.length === 0
            ? "collection"
            : lang === "fa"
            ? collection[0].data[0].collection.title
            : collection[0].data[0].collection.titleEn}
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.ico" />
      </Head>
      <header>
        <Header backColor={"headerColor"} />
      </header>
      {collection[0].data.length === 0 ? (
        <NotPage
          icon={<ReportGmailerrorredIcon />}
          text={t("noCollection")}
          bottonLink="/collections"
          bottonText={t("goCollection")}
        />
      ) : (
        <main>
          {state.loading ? (
            <Loader />
          ) : (
            <CollectionDetails data={collection[0].data} />
          )}
        </main>
      )}
      <footer>
        <Footer />
      </footer>
    </div>
  );
}
export async function getServerSideProps(context) {
  const { params } = context;
  const { collectionname } = params;
  var myHeaders = new Headers();
  myHeaders.append("Content-Type", "application/json");

  const data = await callApi(
    `${BASE_URL + GET_WITH_COLLECTION}?ColectionId=${collectionname}`,
    "{}",
    myHeaders,
    "GET"
  );

  return {
    props: { collection: data } // will be passed to the page component as props
  };
}
